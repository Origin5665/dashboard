{
  "env": {
  "browser": true,
      "es2021": true,
      "node": true,
      "jest": true
},
  "extends": [
  "eslint:recommended",
  "plugin:@typescript-eslint/recommended",
  "plugin:import/recommended",
  "plugin:import/typescript",
  "plugin:react/recommended",
  "plugin:react-hooks/recommended",
  "plugin:jsdoc/recommended",
  "prettier"
],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
  "project": "./tsconfig.json",
      "ecmaVersion": "latest",
      "sourceType": "module",
      "allowImportExportEverywhere": true,
      "ecmaFeatures": {
    "jsx": true
  }
},
  "plugins": ["react", "import", "@typescript-eslint", "jsdoc"],
    "settings": {
  "react": {
    "version": "detect"
  }
},
  "rules": {
  "indent": ["warn", 2],
      "semi": ["error", "never"],
      "linebreak-style": "off",
      "strict": 0,
      "no-compare-neg-zero": "warn",
      "no-cond-assign": "error",
      "no-constant-condition": "error",
      "no-dupe-keys": "error",
      "no-template-curly-in-string": "error",
      "no-unreachable": "error",
      "block-scoped-var": "warn",
      "no-magic-numbers": "off",
      "@typescript-eslint/no-magic-numbers": [
    "warn",
    {
      "ignore": [0, 1, 2, 3],
      "ignoreArrayIndexes": true,
      "ignoreNumericLiteralTypes": true
    }
  ],
      "no-use-before-define": "warn",
      "block-spacing": "error",
      "computed-property-spacing": ["error", "never"],
      "object-curly-spacing": [
    "warn",
    "always",
    {
      "arraysInObjects": false,
      "objectsInObjects": false
    }
  ],
      "comma-style": ["error", "last"],
      "func-style": ["warn", "expression"],
      "jsx-quotes": ["error", "prefer-double"],
      "key-spacing": "error",
      "keyword-spacing": "error",
      "lines-between-class-members": "error",
      "max-len": [
    "error",
    {
      "code": 120,
      "ignoreComments": true,
      "ignoreUrls": true,
      "ignoreStrings": true,
      "ignorePattern": "^import .*"
    }
  ],
      "multiline-ternary": ["warn", "always-multiline"],
      "no-lonely-if": "error",
      "no-multiple-empty-lines": "error",
      "no-trailing-spaces": [
    "error",
    {
      "ignoreComments": true
    }
  ],
      "no-whitespace-before-property": "error",
      "operator-assignment": ["error", "always"],
      "operator-linebreak": [
    "error",
    "after",
    {
      "overrides": {
        "?": "before",
        ":": "before"
      }
    }
  ],
      "padded-blocks": ["warn", "never"],
      "padding-line-between-statements": [
    "warn",
    {
      "blankLine": "always",
      "prev": ["const", "let"],
      "next": "*"
    },
    {
      "blankLine": "any",
      "prev": ["const", "let"],
      "next": ["const", "let"]
    }
  ],
      "quote-props": ["error", "as-needed"],
      "quotes": [
    "warn",
    "single",
    {
      "avoidEscape": true
    }
  ],
      "semi-spacing": "error",
      "space-before-blocks": "error",
      "space-before-function-paren": [
    "error",
    {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }
  ],
      "space-in-parens": ["error", "never"],
      "arrow-parens": ["error", "as-needed"],
      "arrow-spacing": "error",
      "no-useless-computed-key": "error",
      "no-var": "error",
      "no-unused-vars": [
    "warn",
    {
      "ignoreRestSiblings": true
    }
  ],
      "object-shorthand": "error",
      "prefer-const": [
    "warn",
    {
      "ignoreReadBeforeAssign": true
    }
  ],
      "prefer-destructuring": [
    "warn",
    {
      "object": true,
      "array": false
    }
  ],
      "prefer-rest-params": "error",
      "prefer-template": "error",
      "template-curly-spacing": "error",
      "no-fallthrough": [
    "warn",
    {
      "commentPattern": "falls[\\s]*through"
    }
  ],
      "react/button-has-type": "off",
      "react/no-children-prop": "error",
      "react/no-deprecated": "error",
      "react/no-direct-mutation-state": "error",
      "react/no-typos": "error",
      "react/no-this-in-sfc": "error",
      "react/no-unescaped-entities": "error",
      "react/no-unknown-property": "error",
      "react/no-unused-state": "warn",
      "react/prefer-es6-class": "error",
      "react/prefer-stateless-function": [
    2,
    {
      "ignorePureComponents": false
    }
  ],
      "react/require-render-return": "error",
      "react/style-prop-object": "error",
      "react/jsx-closing-bracket-location": "warn",
      "react/jsx-closing-tag-location": "warn",
      "react/jsx-equals-spacing": ["error", "never"],
      "react/jsx-first-prop-new-line": ["warn", "multiline"],
      "react/jsx-key": "error",
      "react/jsx-no-duplicate-props": "error",
      "react/jsx-curly-brace-presence": "error",
      "react/jsx-pascal-case": "error",
      "react/jsx-props-no-multi-spaces": "warn",
      "react/jsx-tag-spacing": [
    "error",
    {
      "beforeSelfClosing": "always",
      "afterOpening": "allow",
      "closingSlash": "allow"
    }
  ],
      "react/jsx-wrap-multilines": [
    "warn",
    {
      "declaration": "parens",
      "assignment": "parens",
      "return": "parens",
      "arrow": "parens",
      "condition": "ignore",
      "logical": "parens",
      "prop": "ignore"
    }
  ],
      "react/jsx-uses-react": "error",
      "react/jsx-uses-vars": "error",
      "react/prop-types": "off",
      "react/display-name": "off",
      "@typescript-eslint/array-type": [
    "error",
    {
      "default": "array-simple"
    }
  ],
      "@typescript-eslint/ban-ts-comment": "warn",
      "@typescript-eslint/consistent-type-definitions": "off",
      "@typescript-eslint/dot-notation": "off",
      "@typescript-eslint/explicit-member-accessibility": [
    "off",
    {
      "accessibility": "explicit"
    }
  ],
      "@typescript-eslint/indent": "off",
      "@typescript-eslint/naming-convention": [
    "error",
    {
      "selector": "default",
      "format": null
    },
    {
      "selector": "typeLike",
      "format": ["PascalCase"]
    },
    {
      "selector": "enum",
      "format": ["UPPER_CASE"]
    }
  ],
      "@typescript-eslint/no-empty-interface": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/no-floating-promises": "off",
      "@typescript-eslint/no-for-in-array": "off",
      "@typescript-eslint/no-inferrable-types": "off",
      "@typescript-eslint/no-non-null-assertion": "off",
      "@typescript-eslint/no-parameter-properties": "off",
      "@typescript-eslint/no-unnecessary-qualifier": "off",
      "@typescript-eslint/no-unused-expressions": [
    "error",
    {
      "allowShortCircuit": true,
      "allowTernary": true
    }
  ],
      "@typescript-eslint/no-use-before-define": "off",
      "@typescript-eslint/promise-function-async": "off",
      "@typescript-eslint/quotes": [
    "error",
    "single",
    {
      "avoidEscape": true
    }
  ],
      "@typescript-eslint/semi": ["error", "never"],
      "@typescript-eslint/strict-boolean-expressions": "off",
      "@typescript-eslint/unbound-method": "off",
      "@typescript-eslint/no-redeclare": [
    "error",
    {
      "ignoreDeclarationMerge": true
    }
  ],
      "@typescript-eslint/space-before-function-paren": [
    "error",
    {
      "anonymous": "always",
      "asyncArrow": "always",
      "named": "never"
    }
  ],
      "@typescript-eslint/no-throw-literal": "error",
      "@typescript-eslint/padding-line-between-statements": [
    "error",
    {
      "blankLine": "always",
      "prev": "*",
      "next": "return"
    }
  ],
      "import/order": [
    "error",
    {
      "groups": [
        "external",
        ["builtin", "internal", "unknown", "parent", "sibling", "index", "object", "type"]
      ],
      "pathGroupsExcludedImportTypes": [],
      "alphabetize": {
        "order": "asc"
      },
      "newlines-between": "always-and-inside-groups"
    }
  ],
      "import/no-deprecated": "warn",
      "import/no-unresolved": "off",
      "import/no-extraneous-dependencies": ["error"],
      "jsdoc/no-types": "error",
      "jsdoc/require-param-type": "off",
      "jsdoc/require-param": "off",
      "jsdoc/require-jsdoc": "off",
      "jsdoc/check-param-names": "error",
      "arrow-body-style": "error",
      "complexity": [
    "warn",
    {
      "max": 10
    }
  ],
      "curly": ["error", "multi-line"],
      "eqeqeq": ["error", "smart"],
      "id-blacklist": ["error", "any", "Number", "String", "string", "Boolean", "boolean", "Undefined", "undefined"],
      "id-match": "error",
      "max-classes-per-file": ["error", 1],
      "max-lines": ["warn", 300],
      "new-parens": "error",
      "no-bitwise": "error",
      "no-caller": "error",
      "no-console": [
    "error",
    {
      "allow": [
        "warn",
        "dir",
        "time",
        "timeEnd",
        "timeLog",
        "trace",
        "assert",
        "clear",
        "count",
        "countReset",
        "group",
        "groupEnd",
        "table",
        "debug",
        "info",
        "dirxml",
        "error",
        "groupCollapsed",
        "Console",
        "profile",
        "profileEnd",
        "timeStamp",
        "context"
      ]
    }
  ],
      "no-empty": [
    "error",
    {
      "allowEmptyCatch": true
    }
  ],
      "no-eval": "error",
      "no-extra-bind": "error",
      "no-new-func": "error",
      "no-new-wrappers": "error",
      "no-param-reassign": "error",
      "no-sequences": "error",
      "no-undef-init": "error",
      "one-var": ["error", "never"],
      "radix": "error",
      "spaced-comment": [
    "error",
    "always",
    {
      "markers": ["/"]
    }
  ],
      "no-else-return": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "off",
      "@typescript-eslint/no-restricted-imports": ["error", "lodash"],
      "react/jsx-boolean-value": "off",
      "react/jsx-curly-spacing": [
    "error",
    {
      "when": "never"
    }
  ],
      "react/jsx-no-bind": [
    "error",
    {
      "allowArrowFunctions": true
    }
  ],
      "react/self-closing-comp": "error",
      "react/jsx-no-useless-fragment": "error",
      "react/jsx-no-literals": [
    "off",
    {
      "allowedStrings": [".", ",", "/", ":", "-", ";"]
    }
  ],
      "react/react-in-jsx-scope": "off",
      "react/no-array-index-key": "warn",
      "react/no-arrow-function-lifecycle": "warn",
      "react/no-danger": "warn",
      "@typescript-eslint/no-non-null-asserted-optional-chain": "off"
}
}